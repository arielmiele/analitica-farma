"""
P√°gina de Validaci√≥n Cruzada - Anal√≠tica Farma
An√°lisis avanzado de overfitting/underfitting mediante curvas de aprendizaje y validaci√≥n cruzada.

Esta p√°gina utiliza m√≥dulos especializados para una mejor organizaci√≥n del c√≥digo:
- educativo: Contenido educativo sobre overfitting/underfitting
- configuracion: Selecci√≥n de modelos y configuraci√≥n de par√°metros
- analisis: Ejecuci√≥n del an√°lisis de validaci√≥n cruzada
- visualizacion: Presentaci√≥n de resultados y gr√°ficos interactivos
- recomendaciones: Sugerencias de mejora espec√≠ficas para la industria farmac√©utica
"""

import sys
import os
import streamlit as st

# Agregar el directorio src al path
sys.path.append(os.path.join(os.path.dirname(__file__), "..", "..", "src"))

# Importar m√≥dulos modularizados
from src.ui.validacion_cruzada.educativo import (
    mostrar_introduccion,
    mostrar_importancia_validacion
)
from src.ui.validacion_cruzada.configuracion import (
    seleccionar_modelo,
    configurar_validacion
)
from src.ui.validacion_cruzada.analisis import (
    ejecutar_analisis_completo
)


def main():
    """Funci√≥n principal de la p√°gina."""
    st.title("üî¨ Validaci√≥n Cruzada y Detecci√≥n de Overfitting")
    
    # Mostrar introducci√≥n te√≥rica
    mostrar_introduccion()
    
    # Mostrar importancia del an√°lisis
    mostrar_importancia_validacion()
    
    st.markdown("---")
    
    # Selecci√≥n de modelo
    modelo, resultados_benchmarking = seleccionar_modelo()

    if modelo and resultados_benchmarking:
        st.markdown("---")
        
        # Explicaci√≥n sobre la configuraci√≥n de validaci√≥n cruzada
        with st.expander("‚ÑπÔ∏è ¬øC√≥mo configurar la validaci√≥n cruzada?", expanded=True):
            st.markdown("""
            **¬øQu√© es la validaci√≥n cruzada?**
            
            La validaci√≥n cruzada permite estimar el rendimiento real de un modelo dividiendo los datos en varios subconjuntos ("folds") y repitiendo el entrenamiento y evaluaci√≥n m√∫ltiples veces.
            
            **¬øC√≥mo configurar los par√°metros?**
            - **N√∫mero de folds para CV:** Define en cu√°ntas partes se divide el dataset para la validaci√≥n cruzada. M√°s folds (por ejemplo, 10) dan una estimaci√≥n m√°s robusta pero requieren m√°s tiempo de c√≥mputo.
            - **Puntos en curva de aprendizaje:** Determina cu√°ntos tama√±os de muestra se usar√°n para construir la curva de aprendizaje. M√°s puntos permiten ver mejor la evoluci√≥n del rendimiento.
            - **M√©trica de evaluaci√≥n:** Selecciona la m√©trica principal para comparar el desempe√±o del modelo (accuracy, f1, precision, recall, roc_auc).
            - **Semilla aleatoria:** Fija el valor para garantizar resultados reproducibles.
            - **Procesamiento:** Permite elegir entre ejecuci√≥n secuencial o paralela (usando todos los n√∫cleos disponibles).
            
            > Ajuste estos par√°metros seg√∫n el tama√±o de su dataset y el tiempo disponible. En datasets peque√±os, usar m√°s folds y m√°s puntos puede ayudar a obtener una mejor estimaci√≥n del rendimiento.
            """)
        
        # Configuraci√≥n de par√°metros
        configuracion = configurar_validacion()
        
        st.markdown("---")
        
        # Ejecutar an√°lisis
        ejecutar_analisis_completo(modelo, configuracion, resultados_benchmarking)
        
        # Navegaci√≥n entre p√°ginas
        st.markdown("---")
        st.subheader("‚è© Navegaci√≥n")
        
        col1, col2 = st.columns(2)
        
        with col1:
            if st.button("üîô Volver a Evaluar Modelos", use_container_width=True):
                st.switch_page("pages/Machine Learning/06_Evaluar_Modelos.py")
        
        with col2:
            if st.button("üëë Ir a Recomendaci√≥n de Modelo", use_container_width=True):
                st.switch_page("pages/Machine Learning/08_Recomendar_Modelo.py")
    
if __name__ == "__main__":
    main()
